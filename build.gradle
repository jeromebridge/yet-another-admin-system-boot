apply plugin: 'eclipse'
apply plugin: 'groovy'

ext {
    virgoVersion = "3.6.3.RELEASE"
    springVersion = "3.2.11.RELEASE"
    aspectjVersion = "1.7.1"
}

configurations {
    virgo
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "http://repo.pennassurancesoftware.com/repository/public/" }
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.3.6'
    virgo "org.eclipse.virgo:virgo-tomcat-server:${virgoVersion}"
}

task setupVirgo << {
    unpackVirgo
}

task unpackVirgo << {
    delete new File( "${buildDir}/staging" )
    configurations.virgo.resolvedConfiguration.resolvedArtifacts.each{ 
        artifact -> 
           project.copy { 
               into new File( "${buildDir}/staging" ) 
               from( zipTree(artifact.file) ) 
           }
    }
}

task runVirgo << {
    
}

task updateKernelRegionSshSettings(type: UpdatePropertiesTask) {
    source = "${projectDir}/src/main/config/kernel.osgi.console.properties"
    target = "${buildDir}/staging/virgo-tomcat-server-${virgoVersion}/configuration/osgi.console.properties"
}

task updateUserRegionSshSettings(type: UpdatePropertiesTask) {
    source = "${projectDir}/src/main/config/user.osgi.console.properties"
    target = "${buildDir}/staging/virgo-tomcat-server-${virgoVersion}/repository/ext/osgi.console.properties"
}

task updateFrameworkProperties(type: UpdatePropertiesTask) {
    source = "${projectDir}/src/main/config/config.ini"
    target = "${buildDir}/staging/virgo-tomcat-server-${virgoVersion}/configuration/config.ini"
}

task upgradeSpringAndAspectJ(type: UpdateSpringAndAspectJTask) {
    virgoHomeFolderPath = "${buildDir}/staging/virgo-tomcat-server-${virgoVersion}"
    springUpgradeFolderPath = "${buildDir}/staging/spring-upgrade"
    aspectjUpgradeFolderPath = "${buildDir}/staging/aspectj-upgrade"
    springUpgradeConfFolderPath = "${projectDir}/src/main/upgrade/spring"
    aspectjVersion = "${aspectjVersion}"
}

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
        
    dependencies {
        classpath 'commons-configuration:commons-configuration:1.10'
        classpath 'commons-lang:commons-lang:2.6'
        classpath 'commons-io:commons-io:2.4'
    }
}

import org.gradle.api.DefaultTask
import org.gradle.api.tasks.TaskAction
import org.apache.commons.configuration.Configuration;
import org.apache.commons.configuration.PropertiesConfiguration;
import org.apache.commons.lang.Validate;
import java.util.Iterator;

class UpdatePropertiesTask extends DefaultTask {
    String target;
    String source;

    @TaskAction
    def update() {
        Validate.notNull( target, "Must specify the property: target" );
        Validate.notNull( source, "Must specify the property: source" );
        PropertiesConfiguration src = new PropertiesConfiguration( source );
        PropertiesConfiguration trgt = new PropertiesConfiguration( target );
        Iterator keyIterator = src.getKeys();
		while( keyIterator.hasNext() ) {
		    String key = keyIterator.next();
		    Object value = src.getProperty( key );
		    trgt.setProperty( key, value ); 
		}
		trgt.save();
    }
}

import org.apache.commons.configuration.Configuration;
import org.apache.commons.configuration.PropertiesConfiguration;
import org.apache.commons.lang.Validate;
import org.apache.commons.io.FileUtils;
import java.util.Iterator;
import java.io.File;
import java.util.regex.Pattern;
import java.nio.file.Paths;
import java.nio.file.Path;
import java.nio.file.Files;
import java.nio.charset.Charset;
import java.nio.charset.StandardCharsets;

class UpdateSpringAndAspectJTask extends DefaultTask {
    String virgoHomeFolderPath;
	String springUpgradeFolderPath;
	String aspectjUpgradeFolderPath;
	String springUpgradeConfFolderPath;
	String aspectjVersion;
    
    @TaskAction
    def update() {
        Validate.notNull( virgoHomeFolderPath, "Must specify the property: virgoHomeFolderPath" );
		Validate.notNull( springUpgradeFolderPath, "Must specify the property: springUpgradeFolderPath" );
		Validate.notNull( aspectjUpgradeFolderPath, "Must specify the property: aspectjUpgradeFolderPath" );
		Validate.notNull( springUpgradeConfFolderPath, "Must specify the property: springUpgradeConfFolderPath" );
		
    }
}